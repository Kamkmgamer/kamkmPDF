# Production Configuration Template for 1000s of Users
# Copy this to .env.production and fill in your values

# ====================================================================
# CORE INFRASTRUCTURE
# ====================================================================

# Database - Use connection pooling service (Supabase, Railway, etc)
DATABASE_URL=postgresql://user:password@host:5432/database?pgbouncer=true
DATABASE_MAX_CONNECTIONS=20
DATABASE_IDLE_TIMEOUT=20
DATABASE_CONNECT_TIMEOUT=10

NODE_ENV=production

# ====================================================================
# AUTHENTICATION
# ====================================================================

NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_live_...
CLERK_SECRET_KEY=sk_live_...

# ====================================================================
# FILE STORAGE
# ====================================================================

UPLOADTHING_TOKEN=ut7_...

# Public URL
NEXT_PUBLIC_APP_URL=https://yourdomain.com

# ====================================================================
# AI GENERATION (Multi-key setup for redundancy)
# ====================================================================

# Primary key
OPENROUTER_API_KEY=sk-or-...

# Backup keys for load distribution and failover (recommended for scale)
OPENROUTER_API_KEY1=sk-or-...
OPENROUTER_API_KEY2=sk-or-...
OPENROUTER_API_KEY3=sk-or-...
OPENROUTER_API_KEY4=sk-or-...
OPENROUTER_API_KEY5=sk-or-...

OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# ====================================================================
# WORKER CONFIGURATION FOR HIGH SCALE
# ====================================================================

# Security
PDFPROMPT_WORKER_SECRET=your-secret-key-change-this

# Batch Processing (for cron-based workers)
PDFPROMPT_MAX_JOBS_PER_INVOCATION=10    # Max jobs per cron invocation
PDFPROMPT_MAX_MS_PER_INVOCATION=55000   # Max execution time (55s for serverless)
PDFPROMPT_BATCH_SIZE=10                 # Jobs claimed per query

# Concurrency Control (adjust based on instance resources)
# For serverless (Vercel): Use conservative values
# For dedicated workers: Scale up based on CPU/RAM
PDFPROMPT_WORKER_CONCURRENCY=8          # Parallel jobs per worker cycle
MAX_PDF_CONCURRENCY=12                  # Global PDF generation limit

# Long-running worker polling (for dedicated workers)
PDFPROMPT_POLL_MS=1000                  # Poll interval (1s for high throughput)

# ====================================================================
# BROWSER POOL SCALING
# ====================================================================

BROWSER_POOL_SIZE=10                    # Max browser instances per worker
BROWSER_IDLE_TIMEOUT=300000             # Close idle browsers after 5min
BROWSER_MAX_AGE_MS=1800000              # Restart browsers after 30min

# ====================================================================
# SUBSCRIPTIONS (if using Polar.sh)
# ====================================================================

POLAR_ACCESS_TOKEN=polar_...
POLAR_WEBHOOK_SECRET=whsec_...

# ====================================================================
# RECOMMENDED SETUPS BY SCALE
# ====================================================================

# ----- SMALL SCALE (100-500 users) -----
# 1 Worker Instance, Vercel + Serverless Cron
# PDFPROMPT_WORKER_CONCURRENCY=3
# MAX_PDF_CONCURRENCY=5
# BROWSER_POOL_SIZE=5
# DATABASE_MAX_CONNECTIONS=10
# Expected: ~100-200 PDFs/hour

# ----- MEDIUM SCALE (500-2000 users) -----
# 2-3 Dedicated Workers, Horizontal Scaling
# PDFPROMPT_WORKER_CONCURRENCY=8
# MAX_PDF_CONCURRENCY=12
# BROWSER_POOL_SIZE=10
# DATABASE_MAX_CONNECTIONS=20
# Expected: ~500-1000 PDFs/hour

# ----- LARGE SCALE (2000-10000 users) -----
# 5-10 Dedicated Workers, Full Infrastructure
# PDFPROMPT_WORKER_CONCURRENCY=10
# MAX_PDF_CONCURRENCY=16
# BROWSER_POOL_SIZE=12
# DATABASE_MAX_CONNECTIONS=25
# Add: Redis cache, Read replicas, CDN
# Expected: ~2000-5000 PDFs/hour

# ====================================================================
# MONITORING & OBSERVABILITY (Optional but recommended)
# ====================================================================

# Datadog
# DD_API_KEY=...
# DD_SERVICE=pdfprompt
# DD_ENV=production

# New Relic
# NEW_RELIC_LICENSE_KEY=...
# NEW_RELIC_APP_NAME=PDFPrompt

# Sentry
# SENTRY_DSN=https://...@sentry.io/...
# SENTRY_ENVIRONMENT=production

# ====================================================================
# CACHING (For advanced scaling)
# ====================================================================

# Redis (Upstash, AWS ElastiCache, etc)
# REDIS_URL=redis://...
# CACHE_TTL_SUBSCRIPTIONS=300
# CACHE_TTL_TIERS=0

